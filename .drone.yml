clone:
    git:
        image: plugins/git
        tags: true

pipeline:
    backend:
        image: hchstera/laravel-workspace
        commands:
            - php -v
            - composer -V
            - phpcs --version
            - cp .env.example .env
            - composer install --prefer-dist
            - php artisan key:generate
            - phpcs --standard=PSR2 -p app/ tests/ config/ routes/
            - ./vendor/bin/phpunit -d memory_limit=1024M --coverage-text=php://stdout --coverage-clover=clover.xml

    codecov:
        image: robertstettner/drone-codecov
        secrets: [ codecov_token ]
        files:
            - ./clover.xml

    pre-build:
        image: docker:git
        pull: true
        secrets: [ ssh_key ]
        commands:
            - mkdir -p ~/.ssh
            - ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
            - echo -n "$SSH_KEY" > ~/.ssh/id_rsa && chmod 0600 ~/.ssh/id_rsa
            - git clone git@github.com:g9308370/cococharge-env.git
            - rm -rf $DRONE_WORKSPACE/database/seeds
            - rm -rf $DRONE_WORKSPACE/node_modules
            - cp cococharge-env/${DRONE_COMMIT_BRANCH}/.env $DRONE_WORKSPACE/.env
            - cp -R $DRONE_WORKSPACE $DRONE_WORKSPACE/../src
            - mv $DRONE_WORKSPACE/../src $DRONE_WORKSPACE
        when:
            branch: [ master, develop ]

    pre-production:
        image: hchstera/laravel-workspace
        pull: true
        secrets: [ ssh_key ]
        commands:
            - mkdir -p ~/.ssh
            - ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
            - echo -n "$SSH_KEY" > ~/.ssh/id_rsa && chmod 0600 ~/.ssh/id_rsa
            - cd $DRONE_WORKSPACE/src
            - git config --global user.email "drone@hchs-service.tk"
            - git config --global user.name "drone"
            - git remote set-url origin git@github.com:g9308370/cococharge.git
            - git remote -v
            - standard-version -m "chore(release) %s [SKIP CI]"
            - git push --follow-tags origin ${DRONE_COMMIT_BRANCH}
        when:
            branch: [ master ]

    publish-dockerhub:
        image: plugins/docker
        repo: hchstera/cococharge
        dockerfile: ./src/Dockerfile
        tags:
            - latest
            - ${DRONE_COMMIT_BRANCH}
        secrets: [ docker_username, docker_password ]
        when:
            event: [ push ]
            branch: [ master, develop ]

    deploy:
        image: appleboy/drone-ssh
        host: 209.97.168.149
        username: root
        command_timeout: 300
        secrets: [ ssh_key, docker_username, docker_password ]
        envs: [ docker_username, docker_password ]
        script:
            - docker login --username "$DOCKER_USERNAME" --password "$DOCKER_PASSWORD"
            - cd /var/www
            - git -C cococharge-docker pull || git clone git@github.com:g9308370/cococharge-docker.git
            - cd cococharge-docker/${DRONE_COMMIT_BRANCH}
            - sudo chmod 777 -R logs
            - docker-compose pull
            - docker-compose down && docker-compose up -d nginx
            - sudo chmod 777 -R logs
            - docker image prune -a -f
            - docker volume prune -f
            - docker network prune -f
        when:
            event: [ push ]
            branch: [ master, develop ]


    ## notifications
    notify-line:
        image: appleboy/drone-line
        secrets: [ plugin_channel_secret, plugin_channel_token, plugin_to_group ]
        when:
            status: [ success, failure ]
        event: [ push ]
        message: |
            {{#success build.status}}
                {{build.author}} trigger build #{{build.number}}
                {{repo.name}} by {{build.event}} to branch {{build.branch}} succeeded.
            {{else}}
                build {{ build.number }} failed. Fix me please.
            {{/success}}
